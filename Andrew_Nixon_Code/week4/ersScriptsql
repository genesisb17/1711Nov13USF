create user Reimbursement
identified by p4ssw0rd;

GRANT connect to Reimbursement;
GRANT resource to Reimbursement;
GRANT create session TO Reimbursement;
GRANT create table TO Reimbursement;
GRANT create view TO Reimbursement;

create table ERS_REIMBURSEMENT_STATUS (
  REIMBURSEMENT_STATUS_ID number NOT NULL,
  REIMBURSEMENT_STATUS varchar2(10) NOT NULL,
  PRIMARY KEY (REIMBURSEMENT_STATUS_ID)
);
create table ERS_REIMBURSEMENT_TYPE (
  REIMBURSEMENT_TYPE_ID number NOT NULL,
  REIMBURSEMENT_TYPE varchar2(10) NOT NULL,
  PRIMARY KEY (REIMBURSEMENT_TYPE_ID)
);
create table ERS_USER_ROLES (
  ERS_USER_ROLE_ID number NOT NULL,
  USER_ROLE varchar2(10) NOT NULL,
  PRIMARY KEY (ERS_USER_ROLE_ID)
);

ALTER TABLE ERS_REIMBURSEMENT_STATUS DROP COLUMN REIMBURSEMENT_STATUS;
ALTER TABLE ERS_REIMBURSEMENT_STATUS 
ADD REIMBURSEMENT_STATUS varchar2(10) NOT NULL;

create table ERS_USERS(
ERS_USER_ID NUMBER NOT NULL,
ERS_USERNAME VARCHAR2(50) NOT NULL UNIQUE,
ERS_PASSWORD VARCHAR2(50) NOT NULL,
USER_FIRST_NAME VARCHAR2(100) NOT NULL,
USER_LAST_NAME VARCHAR2(100) NOT NULL,
USER_EMAIL VARCHAR2(150) NOT NULL UNIQUE,
USER_ROLE_ID NUMBER,
PRIMARY KEY (ERS_USER_ID),
CONSTRAINT USER_ROLES_FK FOREIGN KEY (USER_ROLE_ID) 
    REFERENCES ERS_USER_ROLES (ERS_USER_ROLE_ID)
);

CREATE TABLE ERS_REIMBURSEMENT(
REIMB_ID NUMBER NOT NULL,
REIMB_AMOUNT NUMBER NOT NULL,
REIMB_SUBMITTED TIMESTAMP NOT NULL,
REIMB_RESOLVED TIMESTAMP,
REIMB_DESCRIPTION VARCHAR2(250),
REIMB_RECEIPT BLOB,
REIMB_AUTHOR NUMBER NOT NULL,
REIMB_RESOLVER NUMBER,
REIMB_STATUS_ID NUMBER NOT NULL,
REIMB_TYPE_ID NUMBER NOT NULL,
PRIMARY KEY (REIMB_ID),
CONSTRAINT ERS_USERS_FK_AUTH FOREIGN KEY (REIMB_AUTHOR) REFERENCES ERS_USERS (ERS_USER_ID),
CONSTRAINT ERS_USERS_FK_RESLVR FOREIGN KEY (REIMB_RESOLVER) REFERENCES ERS_USERS (ERS_USER_ID),
CONSTRAINT ERS_REIMBURSEMENT_STATUS_FK FOREIGN KEY (REIMB_STATUS_ID) 
REFERENCES ERS_REIMBURSEMENT_STATUS (REIMBURSEMENT_STATUS_ID),
CONSTRAINT ERS_REIMBURSEMENT_TYPE_FK FOREIGN KEY (REIMB_TYPE_ID) 
REFERENCES ERS_REIMBURSEMENT_TYPE (REIMBURSEMENT_TYPE_ID)
);

CREATE SEQUENCE R_SEQ
START WITH 1
INCREMENT BY 1;
/
--TRIGGER
CREATE OR REPLACE TRIGGER R_trigger
BEFORE INSERT ON ERS_REIMBURSEMENT
FOR EACH ROW
BEGIN
SELECT R_SEQ.NEXTVAL INTO :new.REIMB_ID FROM DUAL;
select CURRENT_TIMESTAMP into :new.REIMB_SUBMITTED FROM DUAL;
END;
/
CREATE OR REPLACE PROCEDURE resolve_reimb(
      IN_ID IN NUMBER,
      IN_RESOLVER IN NUMBER,
      IN_STATUS_ID IN NUMBER)
  IS
  BEGIN
    update ERS_REIMBURSEMENT SET REIMB_RESOLVER = IN_RESOLVER 
        where REIMB_ID = IN_ID;
    update ERS_REIMBURSEMENT SET REIMB_STATUS_ID = IN_STATUS_ID 
        where REIMB_ID = IN_ID;
    update ERS_REIMBURSEMENT SET REIMB_RESOLVED = CURRENT_TIMESTAMP 
        where REIMB_ID = IN_ID;
  END;
/

CREATE SEQUENCE S_SEQ
START WITH 1
INCREMENT BY 1;
/
--TRIGGER
CREATE OR REPLACE TRIGGER S_trigger
BEFORE INSERT ON ERS_REIMBURSEMENT_STATUS
FOR EACH ROW
BEGIN
SELECT S_SEQ.NEXTVAL INTO :new.REIMBURSEMENT_STATUS_ID FROM DUAL;
END;
/

CREATE SEQUENCE T_SEQ
START WITH 1
INCREMENT BY 1;
/
--TRIGGER
CREATE OR REPLACE TRIGGER T_trigger
BEFORE INSERT ON ERS_REIMBURSEMENT_TYPE
FOR EACH ROW
BEGIN
SELECT T_SEQ.NEXTVAL INTO :new.REIMBURSEMENT_TYPE_ID FROM DUAL;
END;
/


CREATE SEQUENCE UR_SEQ
START WITH 1
INCREMENT BY 1;
/
--TRIGGER
CREATE OR REPLACE TRIGGER UR_trigger
BEFORE INSERT ON ERS_USER_ROLES
FOR EACH ROW
BEGIN
SELECT UR_SEQ.NEXTVAL INTO :new.ERS_USER_ROLE_ID FROM DUAL;
END;
/

CREATE SEQUENCE U_SEQ
START WITH 1
INCREMENT BY 1;
/
--TRIGGER
CREATE OR REPLACE TRIGGER U_trigger
BEFORE INSERT ON ERS_USERS
FOR EACH ROW
BEGIN
SELECT U_SEQ.NEXTVAL INTO :new.ERS_USER_ID FROM DUAL;
END;
/

DROP TABLE ERS_REIMBURSEMENT;
DROP TABLE ERS_REIMBURSEMENT_STATUS;
DROP TABLE ERS_REIMBURSEMENT_TYPE;
DROP TABLE ERS_USERS;
DROP TABLE ERS_USER_ROLES;

INSERT INTO ERS_USER_ROLES (USER_ROLE) VALUES ('Employee');
INSERT INTO ERS_USER_ROLES (USER_ROLE) VALUES ('FManager');
select * from ERS_USER_ROLES;

INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMBURSEMENT_TYPE) VALUES ('LODGING');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMBURSEMENT_TYPE) VALUES ('TRAVEL');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMBURSEMENT_TYPE) VALUES ('FOOD');
INSERT INTO ERS_REIMBURSEMENT_TYPE (REIMBURSEMENT_TYPE) VALUES ('OTHER');
select * from ERS_REIMBURSEMENT_TYPE;

INSERT INTO ERS_REIMBURSEMENT_STATUS (REIMBURSEMENT_STATUS) VALUES ('Pending');
INSERT INTO ERS_REIMBURSEMENT_STATUS (REIMBURSEMENT_STATUS) VALUES ('Approved');
INSERT INTO ERS_REIMBURSEMENT_STATUS (REIMBURSEMENT_STATUS) VALUES ('Denied');
select * from ERS_REIMBURSEMENT_STATUS;

INSERT into ERS_USERS (ERS_USERNAME, ERS_PASSWORD, USER_FIRST_NAME, 
  USER_LAST_NAME, USER_EMAIL, USER_ROLE_ID) VALUES ('Hello', 'World123', 'Foo',
  'Bar', 'foo.bar@demoture.com', 21);
select * from ERS_USERS;  

INSERT into ERS_USERS (ERS_USERNAME, ERS_PASSWORD, USER_FIRST_NAME, 
  USER_LAST_NAME, USER_EMAIL, USER_ROLE_ID) VALUES ('Noman', 'D3nil3', 'Finn',
  'Ancial', 'fiin.ancial@demoture.com', 22);
select * from ERS_USERS;
select * from ERS_USER_ROLES;
select * from ERS_REIMBURSEMENT_TYPE;
select * from ERS_REIMBURSEMENT_STATUS;

commit;

UPDATE ERS_USERS set USER_EMAIL = 'finn.ancial@demture.com' where ERS_USER_ID = 23;

select * from ERS_REIMBURSEMENT;
INSERT INTO ERS_REIMBURSEMENT (REIMB_AMOUNT, REIMB_AUTHOR, REIMB_STATUS_ID, 
    REIMB_TYPE_ID) VALUES (100, 22, 21, 21);
ALTER TABLE ERS_REIMBURSEMENT DROP COLUMN REIMB_STATUS_ID;
ALTER TABLE ERS_REIMBURSEMENT ADD REIMB_STATUS_ID NUMBER DEFAULT 21 NOT NULL;
ALTER TABLE ERS_REIMBURSEMENT ADD CONSTRAINT ERS_REIMBURSEMENT_STATUS_FK 
    FOREIGN KEY (REIMB_STATUS_ID) 
    REFERENCES ERS_REIMBURSEMENT_STATUS (REIMBURSEMENT_STATUS_ID);



INSERT INTO ERS_REIMBURSEMENT (REIMB_AMOUNT, REIMB_AUTHOR, REIMB_TYPE_ID) 
    VALUES (150, 22, 22);
INSERT INTO ERS_REIMBURSEMENT (REIMB_AMOUNT, REIMB_AUTHOR, REIMB_TYPE_ID) 
    VALUES (200, 22, 23);

select * from ERS_REIMBURSEMENT where REIMB_AUTHOR = 22;

--IN_ID IN NUMBER, IN_RESOLVER IN NUMBER, IN_STATUS_ID IN NUMBER

EXEC RESOLVE_REIMB(1, 23, 23);

select * from ERS_REIMBURSEMENT where REIMB_STATUS_ID = 21;
select * from ERS_REIMBURSEMENT;-- where REIMB_STATUS_ID = 21;


commit;

select * from ERS_REIMBURSEMENT;
select * from ERS_REIMBURSEMENT where REIMB_STATUS_ID = 21;
select * from ERS_REIMBURSEMENT where REIMB_STATUS_ID = 21 
  AND REIMB_AUTHOR = 22;

select * from ERS_REIMBURSEMENT LEFT JOIN ERS_USERS ON ERS_REIMBURSEMENT.REIMB_AUTHOR = ERS_USERS.ERS_USER_ID;
select * from ERS_REIMBURSEMENT r LEFT JOIN ERS_USERS u ON r.REIMB_AUTHOR = u.ERS_USER_ID;

