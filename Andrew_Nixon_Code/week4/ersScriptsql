create user Reimbursement
identified by p4ssw0rd;

GRANT connect to Reimbursement;
GRANT resource to Reimbursement;
GRANT create session TO Reimbursement;
GRANT create table TO Reimbursement;
GRANT create view TO Reimbursement;

create table ERS_REIMBURSEMENT_STATUS (
  REIMBURSEMENT_STATUS_ID number NOT NULL,
  REIMBURSEMENT_STATUS varchar2(10) NOT NULL,
  PRIMARY KEY (REIMBURSEMENT_STATUS_ID)
);
create table ERS_REIMBURSEMENT_TYPE (
  REIMBURSEMENT_TYPE_ID number NOT NULL,
  REIMBURSEMENT_TYPE varchar2(10) NOT NULL,
  PRIMARY KEY (REIMBURSEMENT_TYPE_ID)
);
create table ERS_USER_ROLES (
  ERS_USER_ROLE_ID number NOT NULL,
  USER_ROLE varchar2(10) NOT NULL,
  PRIMARY KEY (ERS_USER_ROLE_ID)
);

ALTER TABLE ERS_REIMBURSEMENT_STATUS DROP COLUMN REIMBURSEMENT_STATUS;
ALTER TABLE ERS_REIMBURSEMENT_STATUS 
ADD REIMBURSEMENT_STATUS varchar2(10) NOT NULL;

create table ERS_USERS(
ERS_USER_ID NUMBER NOT NULL,
ERS_USERNAME VARCHAR2(50) NOT NULL UNIQUE,
ERS_PASSWORD VARCHAR2(50) NOT NULL,
USER_FIRST_NAME VARCHAR2(100) NOT NULL,
USER_LAST_NAME VARCHAR2(100) NOT NULL,
USER_EMAIL VARCHAR2(150) NOT NULL UNIQUE,
USER_ROLE_ID NUMBER,
PRIMARY KEY (ERS_USER_ID),
CONSTRAINT USER_ROLES_FK FOREIGN KEY (USER_ROLE_ID) 
    REFERENCES ERS_USER_ROLES (ERS_USER_ROLE_ID)
);

CREATE TABLE ERS_REIMBURSEMENT(
REIMB_ID NUMBER NOT NULL,
REIMB_AMOUNT NUMBER NOT NULL,
REIMB_SUBMITTED TIMESTAMP NOT NULL,
REIMB_RESOLVED TIMESTAMP,
REIMB_DESCRIPTION VARCHAR2(250),
REIMB_RECEIPT BLOB,
REIMB_AUTHOR NUMBER NOT NULL,
REIMB_RESOLVER NUMBER,
REIMB_STATUS_ID NUMBER NOT NULL,
REIMB_TYPE_ID NUMBER NOT NULL,
PRIMARY KEY (REIMB_ID),
CONSTRAINT ERS_USERS_FK_AUTH FOREIGN KEY (REIMB_AUTHOR) REFERENCES ERS_USERS (ERS_USER_ID),
CONSTRAINT ERS_USERS_FK_RESLVR FOREIGN KEY (REIMB_RESOLVER) REFERENCES ERS_USERS (ERS_USER_ID),
CONSTRAINT ERS_REIMBURSEMENT_STATUS_FK FOREIGN KEY (REIMB_STATUS_ID) 
REFERENCES ERS_REIMBURSEMENT_STATUS (REIMBURSEMENT_STATUS_ID),
CONSTRAINT ERS_REIMBURSEMENT_TYPE_FK FOREIGN KEY (REIMB_TYPE_ID) 
REFERENCES ERS_REIMBURSEMENT_TYPE (REIMBURSEMENT_TYPE_ID)
);

CREATE SEQUENCE R_SEQ
START WITH 1
INCREMENT BY 1;
/
--TRIGGER
CREATE OR REPLACE TRIGGER R_trigger
BEFORE INSERT ON ERS_REIMBURSEMENT
FOR EACH ROW
BEGIN
SELECT R_SEQ.NEXTVAL INTO :new.REIMB_ID FROM DUAL;
END;
/

CREATE SEQUENCE S_SEQ
START WITH 1
INCREMENT BY 1;
/
--TRIGGER
CREATE OR REPLACE TRIGGER S_trigger
BEFORE INSERT ON ERS_REIMBURSEMENT_STATUS
FOR EACH ROW
BEGIN
SELECT S_SEQ.NEXTVAL INTO :new.REIMBURSEMENT_STATUS_ID FROM DUAL;
END;
/

CREATE SEQUENCE T_SEQ
START WITH 1
INCREMENT BY 1;
/
--TRIGGER
CREATE OR REPLACE TRIGGER T_trigger
BEFORE INSERT ON ERS_REIMBURSEMENT_TYPE
FOR EACH ROW
BEGIN
SELECT T_SEQ.NEXTVAL INTO :new.REIMBURSEMENT_TYPE_ID FROM DUAL;
END;
/


CREATE SEQUENCE UR_SEQ
START WITH 1
INCREMENT BY 1;
/
--TRIGGER
CREATE OR REPLACE TRIGGER UR_trigger
BEFORE INSERT ON ERS_USER_ROLES
FOR EACH ROW
BEGIN
SELECT UR_SEQ.NEXTVAL INTO :new.ERS_USER_ROLE_ID FROM DUAL;
END;
/

CREATE SEQUENCE U_SEQ
START WITH 1
INCREMENT BY 1;
/
--TRIGGER
CREATE OR REPLACE TRIGGER U_trigger
BEFORE INSERT ON ERS_USERS
FOR EACH ROW
BEGIN
SELECT U_SEQ.NEXTVAL INTO :new.ERS_USER_ID FROM DUAL;
END;
/

DROP TABLE ERS_REIMBURSEMENT;
DROP TABLE ERS_REIMBURSEMENT_STATUS;
DROP TABLE ERS_REIMBURSEMENT_TYPE;
DROP TABLE ERS_USERS;
DROP TABLE ERS_USER_ROLES;

