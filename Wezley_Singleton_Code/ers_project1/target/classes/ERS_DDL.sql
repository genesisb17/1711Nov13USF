--DROP TABLE ERS_REIMBURSEMENTS;
--DROP TABLE ERS_USERS;
--DROP TABLE ERS_USER_ROLES;
--DROP TABLE ERS_REIMBURSEMENT_TYPE;
--DROP TABLE ERS_REIMBURSEMENT_STATUS;
--DROP SEQUENCE ERS_USERS_SEQ;
--DROP SEQUENCE ERS_USER_ROLES_SEQ; 

CREATE TABLE ers_reimbursement_status(
  reimb_statusId    NUMBER PRIMARY KEY,
  reimb_status      VARCHAR2(10)
);

CREATE TABLE ers_reimbursement_type(
  reimb_typeId      NUMBER PRIMARY KEY,
  reimb_type        VARCHAR2(10)
);

CREATE TABLE ers_user_roles(
  ers_userRoleId    NUMBER PRIMARY KEY,
  ers_userRole      VARCHAR2(10)
);

CREATE TABLE ers_users(
  ers_userId        NUMBER PRIMARY KEY,
  ers_username      VARCHAR2(50) UNIQUE,
  ers_password      VARCHAR2(50),
  user_firstname    VARCHAR2(100),
  user_lastname     VARCHAR2(100),
  user_emailAddress VARCHAR2(255) UNIQUE,
  user_role_id      NUMBER,
  
  CONSTRAINT user_roles_fk FOREIGN KEY (user_role_id) 
      REFERENCES ers_user_roles(ers_userRoleId)
);

CREATE TABLE ers_reimbursements(
  reimb_id            NUMBER PRIMARY KEY,
  reimb_amount        NUMBER(7,2),
  reimb_resolved      TIMESTAMP,
  reimb_description   VARCHAR(250),
  reimb_receipt       BLOB,
  reimb_author        NUMBER,
  reimb_resolver      NUMBER,
  reimb_statusId      NUMBER,
  reimb_typeId        NUMBER,
  
  CONSTRAINT reimb_author_fk FOREIGN KEY (reimb_author)
      REFERENCES ers_users(ers_userId),
      
  CONSTRAINT reimb_resolver_fk FOREIGN KEY (reimb_resolver)
      REFERENCES ers_users(ers_userId),
      
  CONSTRAINT reimb_statusId_fk FOREIGN KEY (reimb_statusId)
      REFERENCES ers_reimbursement_status(reimb_statusId),
      
  CONSTRAINT reimb_typeId_fk FOREIGN KEY (reimb_typeId)
      REFERENCES ers_reimbursement_type(reimb_typeId)
);


-- SEQUENCES AND TRIGGERS FOR AUTO-INCREMENT ON TABLE INSERTS

-- AUTO-INCREMENT SEQUENCE FOR ERS_USERS
CREATE SEQUENCE ERS_USERS_SEQ
  MINVALUE 1 
  MAXVALUE 9999999999999999999999999999 
  INCREMENT BY 1 
  START WITH 1 
  CACHE 20 
  NOORDER  
  NOCYCLE;

-- TRIGGER SEQUENCE ERS_USER_SEQ ON ROW INSERT FOR ERS_USERS
CREATE OR REPLACE TRIGGER ERS_USERS_TRIGGER
BEFORE INSERT ON ERS_USERS
FOR EACH ROW

BEGIN
  SELECT ERS_USERS_SEQ.NEXTVAL 
  INTO :new.ERS_USERID
  FROM DUAL;
END;
/


-- AUTO-INCREMENT SEQUENCE FOR ERS_USER_ROLES
CREATE SEQUENCE ERS_USER_ROLES_SEQ
  MINVALUE 1 
  MAXVALUE 9999999999999999999999999999 
  INCREMENT BY 1 
  START WITH 1 
  CACHE 20 
  NOORDER  
  NOCYCLE;

-- TRIGGER SEQUENCE ERS_USER_ROLES_SEQ ON ROW INSERT FOR ERS_USER_ROLES
CREATE OR REPLACE TRIGGER ERS_USER_ROLES_TRIGGER
BEFORE INSERT ON ERS_USER_ROLES
FOR EACH ROW

BEGIN
  SELECT ERS_USER_ROLES_SEQ.NEXTVAL 
  INTO :new.ERS_USERROLEID
  FROM DUAL;
END;
/


-- AUTO-INCREMENT SEQUENCE FOR ERS_REIMBURSEMENTS
CREATE SEQUENCE ERS_REIMBURSEMENTS_SEQ
  MINVALUE 1 
  MAXVALUE 9999999999999999999999999999 
  INCREMENT BY 1 
  START WITH 1 
  CACHE 20 
  NOORDER  
  NOCYCLE;

-- TRIGGER SEQUENCE ERS_REIMBURSEMENTS_SEQ ON ROW INSERT FOR ERS_REIMBURSEMENTS
CREATE OR REPLACE TRIGGER ERS_REIMBURSEMENTS_TRIGGER
BEFORE INSERT ON ERS_REIMBURSEMENTS
FOR EACH ROW

BEGIN
  SELECT ERS_REIMBURSEMENTS_SEQ.NEXTVAL 
  INTO :new.REIMB_ID
  FROM DUAL;
END;
/


-- AUTO-INCREMENT SEQUENCE FOR ERS_REIMBURSEMENTS
CREATE SEQUENCE ERS_REIMB_STATUS_SEQ
  MINVALUE 1 
  MAXVALUE 9999999999999999999999999999 
  INCREMENT BY 1 
  START WITH 1 
  CACHE 20 
  NOORDER  
  NOCYCLE;

-- TRIGGER SEQUENCE ERS_REIMBURSEMENTS_SEQ ON ROW INSERT FOR ERS_REIMBURSEMENTS
CREATE OR REPLACE TRIGGER ERS_REIMB_STATUS_TRIGGER
BEFORE INSERT ON ERS_REIMBURSEMENT_STATUS
FOR EACH ROW

BEGIN
  SELECT ERS_REIMB_STATUS_SEQ.NEXTVAL 
  INTO :new.REIMB_STATUSID
  FROM DUAL;
END;
/


-- AUTO-INCREMENT SEQUENCE FOR ERS_REIMBURSEMENTS
CREATE SEQUENCE ERS_REIMB_TYPE_SEQ
  MINVALUE 1 
  MAXVALUE 9999999999999999999999999999 
  INCREMENT BY 1 
  START WITH 1 
  CACHE 20 
  NOORDER  
  NOCYCLE;

-- TRIGGER SEQUENCE ERS_REIMBURSEMENTS_SEQ ON ROW INSERT FOR ERS_REIMBURSEMENTS
CREATE OR REPLACE TRIGGER ERS_REIMB_TYPE_TRIGGER
BEFORE INSERT ON ERS_REIMBURSEMENT_TYPE
FOR EACH ROW

BEGIN
  SELECT ERS_REIMB_TYPE_SEQ.NEXTVAL 
  INTO :new.REIMB_TYPEID
  FROM DUAL;
END;
/