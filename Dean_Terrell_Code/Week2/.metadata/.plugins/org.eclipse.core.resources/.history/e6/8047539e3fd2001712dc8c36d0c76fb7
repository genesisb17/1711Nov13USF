package com.real.util;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.ex.pojos.Artist;
import com.ex.util.ConnectionFactory;
import com.real.dao.DAO;
import com.real.dao.FileDAO;
import com.real.pojos.User;

public class Service {
	
	static DAO dao = new FileDAO();
	String filename = "src/main/resources/bank.txt";

	public User addUser(User u) {
		// validate that username does not exist
		//assuming that it DNE:
		if(!isUser(u))
			dao.addUser(u);
		else
			System.out.println("Username already exists, please try again.");
		return u;
	}
	
	public User getUser(String uName) {
		return dao.getUser(uName);
	}
	
	public boolean isUser(String username) {
		
		try(Connection conn = ConnectionFactory.getInstance().getConnection()) {
			String sql = "select * from user where username = ?";
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setInt(1, id); // Goes by order of question marks
			ResultSet info = ps.executeQuery();
			while(info.next()) {
				art.setId(info.getInt(1));
				art.setName(info.getString(2));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;
	}
	
	public void updateBalance(double oldValue, double newValue) {
		dao.updateBalance(oldValue, newValue);
	}
	
}
