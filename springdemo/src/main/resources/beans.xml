<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- 
Defining our XML namespace default space for our beans.xml.
The name acts as a library for the properties that we can use to create
and inject into a bean
xmlns:si - XML schema instance/ schema location we
give this to our XML file for context sensitive help 
inside of our app makes sure that we have both well formed
and valid XML.
-->
<!-- <bean id ="beanbean" class="com.ex.beans.HelloBeans">
<property name="hello">

<bean id="helloWorld" class="com.ex.beans.HelloWorld">
	<!-- property is used to assign variables -->
<!-- 
<property name="message" 
value="Hello Spring!! This is dependency Injection!"/>
<constructor-arg type="java.lang.String" value="testing constructor Injection"/>
</bean>
</property>
</bean>


<bean id="employee" class="com.ex.autowired.Employee">
<property name ="dept" ref="dept"/>
	<property name="dept" value="dept" />

</bean>

<bean id="dept" class="com.ex.autowired.Department" autowire="byName">
	<property name="name" value="techTeam"/>

</bean>
-->

<context:annotation-config/>
<context:component-scan base-package="com.ex.autowire"/>
<tx:annotation-driven/>
<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource">
	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
	<property name="username" value ="demo"></property>
	<property name="password" value="demo"></property>
</bean>
<bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
<property name="dataSource" ref="myDataSource"></property>
<property name="packagesToScan" value="com.ex"></property>
<property name="hibernateProperties"></property>
<props>
	<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
	<prop key="hibernate.show_sql">true</prop>
	<prop key="hibernate.format_sql">true</prop>
	<prop key="hibernate.hbm2ddl.auto">create</prop>
</props>
</bean>

<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
<property name="sessionFactory"></property>
</bean>


</beans>
<!-- 
The above is a spring bean configuration file
It is an xml file that acts as a cement that
 -->