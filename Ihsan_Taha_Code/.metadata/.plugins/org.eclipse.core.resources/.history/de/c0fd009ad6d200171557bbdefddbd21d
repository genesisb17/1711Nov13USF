package com.bank.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import com.bank.pojos.Account;
import com.bank.pojos.User;
import com.bank.util.ConnectionFactory;

public class AccountDAOImp implements AccountDAO
{

	@Override
	public ArrayList<Account> getAllAccounts(User user)
	{
		ArrayList<Account> accounts = new ArrayList<>();

		try (Connection conn = ConnectionFactory.getInstance().getConnection())
		{
			String sql = "SELECT * FROM ACCOUNTS WHERE USER_ID = ?";
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setInt(1, user.getUserId());
			ResultSet rs = ps.executeQuery();

			while (rs.next())
			{
				Account temp = new Account();
				temp.setAccountId(rs.getInt(1));
				temp.setUserId(rs.getInt(2));
				temp.setBalance(rs.getDouble(3));
				accounts.add(temp);
			}
		} catch (SQLException e)
		{
			// e.printStackTrace();
			return null;
		}

		return accounts;
	}

	@Override
	public ArrayList<Account> getAccountsByUserId(User user)
	{

		return null;
	}

	@Override
	public boolean addAccount(User user, Account account)
	{

		return false;
	}

	@Override
	public Account getAccount(int acc_id)
	{
		Account account = new Account();

		try (Connection conn = ConnectionFactory.getInstance().getConnection();)
		{
			String sql = "SELECT * FROM ACCOUNTS WHERE ACC_ID = ?";
			PreparedStatement ps = conn.prepareStatement(sql);
			ps.setInt(1, acc_id);
			ResultSet rs = ps.executeQuery();

			while (rs.next())
			{
				account.setAccountId(rs.getInt(1));
				account.setUserId(rs.getInt(2));
				account.setBalance(rs.getDouble(3));
			}
		} catch (SQLException e)
		{
			//e.printStackTrace();
			return null;
		}
			return account;
	}

	@Override
	public void updateAccount(Account account)
	{

	}

	@Override
	public void deleteAccount(Account account)
	{

	}

}
