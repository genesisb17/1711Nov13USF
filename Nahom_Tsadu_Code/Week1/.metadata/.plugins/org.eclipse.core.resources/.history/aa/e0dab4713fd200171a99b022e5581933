package com.rev.dao;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import com.rev.pojos.Account;
import com.rev.pojos.User;

public class FileDAO implements DAO{

	static String filename = "src/main/resources/bank.txt";
	private OracleConfiguration oc = OracleConfiguration.getInstance();
//	public User addUser(User u) {
//		try(BufferedWriter bw = new BufferedWriter(new FileWriter(filename, true))){
//			bw.write(u.toFile());
//			return u;
//		} catch (IOException e) {
//			e.printStackTrace();
//		}
//	 return null;
//	}
	
	public User addUser(User u) {
		try(BufferedWriter bw = new BufferedWriter(new FileWriter(filename, true))){
			bw.write(u.toFile());
			return u;
		} catch (IOException e) {
			e.printStackTrace();
		}
	 return null;
	}

	public User getUser(String username) {
		ArrayList<User> userList = getAllUsers();
		if(!userList.isEmpty()){
			for(User u: userList){
				if(u.getUsername().equals(username)){
					return u;
				}
			}
		}
	 return null;
	}

	public User deposit(User u) {
		ArrayList<User> userList = getAllUsers();
		try(BufferedWriter bw = new BufferedWriter(new FileWriter(filename, false))){
			if(!userList.isEmpty()){
				for(User usr: userList){
					if(usr.getUsername().equals(u.getUsername())) usr = u;
					bw.write(usr.toFile());
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	 return u;
	}

	@Override
	public User withdraw(User u) {
		ArrayList<User> userList = getAllUsers();
		try(BufferedWriter bw = new BufferedWriter(new FileWriter(filename, false))){
			if(!userList.isEmpty()){
				for(User usr: userList){
					if(usr.getUsername().equals(u.getUsername())) usr = u;
					bw.write(usr.toFile());
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	 return u;
	}

//	@Override
//	public ArrayList<User> getAllUsers() {
//		ArrayList<User> userList = new ArrayList<User>();
//		try(BufferedReader br = new BufferedReader(new FileReader(filename))){
//			String line = null;
//			while((line = br.readLine()) != null){
//				String[] userData = line.split(":");
//				userList.add(new User(Integer.parseInt(userData[0]), 
//									  userData[1],
//									  userData[2],
//									  userData[3],
//									  userData[4],
//									  Double.parseDouble(userData[5])));
//			}
//		} catch (IOException e) {
//			e.printStackTrace();
//			return null;
//		}
//	 return userList;
//	}
	public Account createAccount(int userId) {
		Account account;
	    PreparedStatement stmt = null;
	    String query = "INSERT INTO ACCOUNT(USER_ID, BALANCE) VALUES (?, ?)";
	    try(Connection connection = oc.getConnection()){
	    	connection.setAutoCommit(false);
	        stmt = connection.prepareStatement(query, userId, 0);
	        ResultSet rs = stmt.executeQuery(query);
	        while(rs.next()){
				userList.add(new User(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)));
			}
	    }catch (SQLException e) {
	        e.printStackTrace();
	    } 
	 return userList;
	}
	
	@Override
	public ArrayList<User> getAllUsers() {
		ArrayList<User> userList = new ArrayList<User>();
	    Statement stmt = null;
	    String query = "SELECT * FROM Users";
	    try(Connection connection = oc.getConnection()){
	        stmt = connection.createStatement();
	        ResultSet rs = stmt.executeQuery(query);
	        while(rs.next()){
				userList.add(new User(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)));
			}
	    }catch (SQLException e) {
	        e.printStackTrace();
	    } 
	 return userList;
	}
}
