package com.revature.hello;

import java.util.Arrays;
import java.util.Random;

public class SearchAndSorts {
	/*
	 * 1. Binary Search
	 * 2. Breadth First Search
	 * 3. Depth First Search
	 * 4. Bubble Sort
	 * 5. Merge Sort
	 * 6. Insertion Sort
	 */
	
	public static void main(String[] args) {
		
		int[] numArray = {1, 4, 7, 8, 9, 20, 34, 67, 88};
		int num;
		Random gen = new Random();
		
		System.out.print("Numbers to search: ");
		Arrays.stream(numArray).forEach(n -> System.out.print(n + ", "));
		System.out.println();
		System.out.println();
		
		num = getRandomElement(numArray, gen);
		
		System.out.println("Running Binary Search for number " + num + "...");
		binarySearch(num, numArray);
		System.out.println();
		System.out.println();
		
		System.out.println("Running Breadth-First Search for number " + num + "...");
		
	}
	
	public static int getRandomElement(int[] arr, Random g){
		
		return arr[g.nextInt(arr.length)];
	}
	
	public static int binarySearch(int n, int[] arr){
		
		boolean found = false;
		int midpoint = 0;
		int num = 0;
		
		while(!found){
			midpoint = (arr.length-1) / 2;
			
			if(n > arr[midpoint]){
				arr = Arrays.copyOfRange(arr, (midpoint + 1), (arr.length));
			}else if(n < arr[midpoint]){
				arr = Arrays.copyOfRange(arr, 0, (midpoint));
			}else if(n == arr[midpoint]){
				num = arr[midpoint];
				found = true;
			}
		}
		
		System.out.print("Integer " + n + " was found!");
		return num;
	}

}
