const attributes = {
		introduction: "introduction", 
	    overloading: "overloading", 
	    overriding: "overriding", 
	    coercion: "coercion",
	    inclusion: "inclusion",
        modal: "myModal",
        modalContent: "modal-diagram"
};

let scrollReqs = {
		[attributes.introduction] : {
				normalScroll: ()=>{return "0px";},
				alternateScroll: ()=>{return "0px";}
			},
		[attributes.overloading] : {
				normalScroll: ()=>{return ($(window).height() / 10).toString();},
				alternateScroll: ()=>{return (($(window).height() - $(map[getPrevious()]).height()) / 7.65).toString();}
			},
		[attributes.overriding] : {
				normalScroll: ()=>{return ($(window).height() / 5).toString();},
				alternateScroll: ()=>{return (($(window).height() - $(map[getPrevious()]).height()) / 3.84).toString();}
			},
		[attributes.coercion] : {
				normalScroll: ()=>{return ($(window).height() / 3.34).toString();},
				alternateScroll: ()=>{return (($(window).height() - $(map[getPrevious()]).height()) / 2.55).toString();}
			},
		[attributes.inclusion] : {
				normalScroll: ()=>{return ($(window).height() / 2.50).toString();},
				alternateScroll: ()=>{return (($(window).height() - $(map[getPrevious()]).height()) / 1.95).toString();}
			}
};
	
function initModals(){
	mainModal = formatAttribute(attributes.modal);
	mainModalContent = formatAttribute(attributes.modalContent);
	modalElements.push(
			formatModalAttribute(attributes.introduction), 
			formatModalAttribute(attributes.overloading), 
			formatModalAttribute(attributes.overriding), 
			formatModalAttribute(attributes.coercion),
			formatModalAttribute(attributes.inclusion));
}

function initElements(specialInitObject){
	for(i = 0; i < specialInitObject.length; i++){
		specialInitObject[i].elements.push(
				formatAttribute(specialInitObject[i].attribute), 
				formatTabAttribute(specialInitObject[i].attribute),  
				formatButtonAttribute(specialInitObject[i].attribute));
	}
}

function setModalFocus(){
	$('#myInput').focus()
}

function setModalDiagram(element){
	$(mainModalContent).attr("src", diagramMap[$(element).attr("id")]);    
	$(mainModalContent).css("margin-top", diagramFormat[$(element).attr("id")]);
}

function setView(attribute){ console.log(attribute);
	if(getCurrent() == attribute){ 
		console.log(formatButtonIconAttribute(attribute));
		setIcon(formatButtonIconAttribute(attribute), "fa fa-minus", "fa fa-plus");
		if(getPrevious() == null)$('html, body').animate({scrollTop: scrollReqs[attribute].normalScroll() + "px"}, 800);   
		else $('html, body').animate({scrollTop: scrollReqs[attribute].alternateScroll() + "px"}, 800);   
	}else{setIcon(formatButtonIconAttribute(attribute), "fa fa-plus", "fa fa-minus");}
}

function setIcon(element, iconA, iconB){
	if(getCurrent() == null){
		for (i = 0; i < iconMap.length; i++) { 
			$(iconMap[i]).attr("class", "fa fa-plus");
		}
	}else{
		for (i = 0; i < iconMap.length; i++) { 
		    if(element == iconMap[i]){
		    	$(element).attr("class", iconA);
		    }else{$(iconMap[i]).attr("class", iconB);}
		}
	}
}