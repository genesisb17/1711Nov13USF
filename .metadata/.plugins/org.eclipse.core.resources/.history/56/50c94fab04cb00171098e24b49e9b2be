package com.revature.threads;

public class multiThreading 
{
	public static void main(String[] args)
	{
		ExtendThread et = new ExtendThread();
	
		ImplementsRunnable ir = new ImplementsRunnable();
		Thread isThread = new Thread(ir);
		
		Runnable anonRun = new Runnable(){
		@Override
		public void run()
		{
			System.out.println("In anonymous class");
			for(int i = 0;i<10;i++)
			{
				System.out.println(i+"in anon");
			}
		};
		Thread anonThread = new Thread(anonRun);
		
		Thread exThread = new Thread()
		{
		};
		
Runnable lambda= () -> {
	System.out.println("in lambda");
	for(int i =0;i<10;i++)
	{
		System.out.println(i+"in lambda");
	}
};
		Thread lambdaThead = new Thread(lambda);
		isThread.start();
		et.start();
		anonThread.start();
	}
//lambda is a functional interface
}
